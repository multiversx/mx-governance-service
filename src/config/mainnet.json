{
    "multiversx": {
        "chainID": "1",
        "existingProposals": 6
    },
    "scAddress": {
        "lockedAssetAddress": "erd1qqqqqqqqqqqqqpgqjpt0qqgsrdhp2xqygpjtfrpwf76f9nvg2jpsg4q7th",
        "simpleLockAddress": [
            "erd1qqqqqqqqqqqqqpgqs0jjyjmx0cvek4p8yj923q5yreshtpa62jpsz6vt84",
            "erd1qqqqqqqqqqqqqpgqawujux7w60sjhm8xdx3n0ed8v9h7kpqu2jpsecw6ek",
            "erd1qqqqqqqqqqqqqpgq6nu2t8lzakmcfmu4pu5trjdarca587hn2jpsyjapr5"
        ],
        "simpleLockEnergy": "erd1qqqqqqqqqqqqqpgq0tajepcazernwt74820t8ef7t28vjfgukp2sw239f3"
    },
    "governance": {
        "oldEnergy": {
            "cvadratic": [
                "erd1qqqqqqqqqqqqqpgqdt9aady5jp7av97m7rqxh6e5ywyqsplz2jps5mw02n"
            ]
        },
        "energy": {
            "cvadratic": [
                "erd1qqqqqqqqqqqqqpgqyxqwuhtj3xhftcpn2kzuq07lhdp4ng222jps650gtt"
            ]
        },
        "tokenSnapshot": {
            "linear": [
                "erd1qqqqqqqqqqqqqpgq7cywmem5g66ad49rce0ctu6yqmscmp9v7j6q7cded4",
                "erd1qqqqqqqqqqqqqpgq8xqp6c0kzwn3f2c5zsxfex6h69s2x9rwhg4smw0gfc",
                "erd1qqqqqqqqqqqqqpgq4qvrwlr2e6ld50f3qfc94am38p8298kthg4s3f0vfn",
                "erd1qqqqqqqqqqqqqpgqfn2mu8l0dte34eqh6qtgmpjpxpkhunccrl4sy2sp07",
                "erd1qqqqqqqqqqqqqpgqj4ms6lnkq0zlw0mkd0mfgwaly89znl5nytcqypnq5c"
            ],
            "cvadratic": [
                "erd1qqqqqqqqqqqqqpgqrgnkavjf5nl943crczz5wjxzs5garatj47dsnupxm6"
            ]
        },
        "onChain": {
            "linear": [
                "erd1qqqqqqqqqqqqqqqpqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqrlllsrujgla"
            ]
        },
        "pulse": {
            "linear": [
                "erd1qqqqqqqqqqqqqpgqz4kkjcx84ursnzkdt3x0746wqu2c8nsxvpkqkfkr35"
            ]
        }
    },
     "requestExplicit": [
        "erd1qqqqqqqqqqqqqpgqj4ms6lnkq0zlw0mkd0mfgwaly89znl5nytcqypnq5c"
    ],
    "delegateStakingProviders": [
        {
            "providerName": "Legacy-Delegation",
            "voteScAddress": "erd1qqqqqqqqqqqqqpgqxwakt2g7u9atsnr03gqcgmhcv38pt7mkd94q6shuwt",
            "stakeScAddress": "erd1qqqqqqqqqqqqqpgqxwakt2g7u9atsnr03gqcgmhcv38pt7mkd94q6shuwt",
            "lsTokenId": "",
            "voteFunctionName": "delegateVote",
            "viewUserVotingPowerName": "getVotingPower",
            "isEnabled": true
        },
        {
            "providerName": "XOXNO",
            "voteScAddress": "erd1qqqqqqqqqqqqqpgqdnpmeseu3j5t7grds9dfj8ttt70pev66ah0sydkq9x",
            "stakeScAddress": "erd1qqqqqqqqqqqqqpgq6uzdzy54wnesfnlaycxwymrn9texlnmyah0ssrfvk6",
            "lsTokenId": "",
            "voteFunctionName": "delegate_vote",
            "viewUserVotingPowerName": "",
            "isEnabled": true
        },
        {
            "providerName": "Hatom",
            "voteScAddress": "",
            "stakeScAddress": "",
            "lsTokenId": "",
            "voteFunctionName": "delegate_vote",
            "viewUserVotingPowerName": "",
            "isEnabled": false
        },
        {
            "providerName": "Salsa",
            "voteScAddress": "",
            "stakeScAddress": "",
            "lsTokenId": "",
            "voteFunctionName": "delegate_vote",
            "viewUserVotingPowerName": "",
            "isEnabled": false
        }
    ],
    "github": {
        "owner": "multiversx",
        "repository": "multiversx-improvement-documents",
        "branch": "main"
    },
    "onChainConfig": [
        {
            "onChainId": 1,
            "faq": [
                {
                "question": "What is voting power?",
                "answer": "Voting Power mostly represents the total staked EGLD (via various providers) the user has."
                },
                {
                "question": "What counts for voting power?",
                "answer": "Direct staking/delegation, legacy delegation and liquid staking."
                },
                {
                "question": "Who validates the voting power?",
                "answer": "We use the on-chain governance module, and therefore, users' stake and voting power is directly validated at protocol level. Each vote represents a transaction and the Governance System Smart Contract will handle all the necessary checks directly at the protocol's level."
                },
                {
                "question": "Which Liquid Staking providers are supported?",
                "answer": "Any liquid staking provider can integrate support. Currently, Hatom, Xoxno and Salsa have provided snapshots for their user's voting power."
                },
                {
                "question": "How Liquid Staking providers distribute the voting power?",
                "answer": "The distribution of the voting power among the users is totally up to them. If a Liquid Staking provider, for example, has 1000 staked EGLD, it can distribute the 1000 voting power to their users based on their own choice. They can choose to distribute it only to the users that have their liquid EGLD token (for example SEGLD, XEGLD), or include collateral tokens (such as HSEGLD) as well."
                },
                {
                "question": "How many times can I vote?",
                "answer": "One vote per user per provider per proposal. This means that if a user has multiple providers (let's say legacy delegation and liquid staking) he can vote for each of the providers. However, multiple votes per provider are not allowed (for example: staking more EGLD after already voting with the existing staked EGLD won't count)."
                }
            ],
            "excludedAddresses": [
                {
                    "address": "erd1rf4hv70arudgzus0ymnnsnc4pml0jkywg2xjvzslg0mz4nn2tg7q7k0t6p",
                    "name": "Binance Staking"
                } 
            ]
        }
    ]
}